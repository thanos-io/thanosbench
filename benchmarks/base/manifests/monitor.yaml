apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: monitor
  name: monitor
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor
  serviceName: monitor
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: monitor
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yaml
        - --log.level=info
        - --storage.remote.read-concurrent-limit=99999
        - --storage.remote.read-sample-limit=9999999999999999
        - --storage.tsdb.path=/data-shared/prometheus
        - --storage.tsdb.min-block-duration=2h
        - --storage.tsdb.max-block-duration=4h
        - --storage.tsdb.retention.time=2d
        - --web.enable-lifecycle
        - --web.enable-admin-api
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: quay.io/prometheus/prometheus:v2.13.0-rc.0
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        name: prometheus
        ports:
        - containerPort: 9090
          name: http
        readinessProbe:
          httpGet:
            path: -/ready
            port: 9090
          successThreshold: 3
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
        securityContext:
          runAsNonRoot: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/prometheus
          name: monitor-config
        - mountPath: /data-shared
          name: monitor
      - args:
        - sidecar
        - --log.level=debug
        - --debug.name=$(POD_NAME)
        - --http-address=0.0.0.0:19190
        - --grpc-address=0.0.0.0:19090
        - --prometheus.url=http://localhost:9090
        - --tsdb.path=/data-shared/prometheus
        command:
        - thanos
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: quay.io/thanos/thanos:v0.7.0
        imagePullPolicy: Always
        name: thanos
        ports:
        - containerPort: 19190
          name: m-sidecar
        - containerPort: 19090
          name: grpc-sidecar
        readinessProbe:
          httpGet:
            path: metrics
            port: 19190
        resources:
          limits:
            cpu: "1"
            memory: 200Mi
          requests:
            cpu: "1"
            memory: 200Mi
        securityContext:
          runAsNonRoot: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /data-shared
          name: monitor
      serviceAccountName: monitor
      volumes:
      - configMap:
          name: monitor-config
        name: monitor-config
      - name: monitor
  updateStrategy: {}
status:
  replicas: 0
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: monitor
  name: monitor
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: http
    port: 9090
    targetPort: 9090
  - name: grpc-sidecar
    port: 19090
    targetPort: 19090
  - name: http-sidecar
    port: 19190
    targetPort: 19190
  selector:
    app: monitor
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
data:
  prometheus.yaml: |
    global:
      scrape_interval: 15s
      external_labels:
        monitor: "0"
    scrape_configs:
    - job_name: kubernetes-nodes-cadvisor
      scheme: https
      kubernetes_sd_configs:
      - role: node
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      relabel_configs:
      - regex: __meta_kubernetes_node_label_(.+)
        action: labelmap
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - default
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        regex: ^(http|m-.+)$
        target_label: __address__
        action: keep
      - source_labels: [__meta_kubernetes_pod_annotation_thanosbench_io_metric_path]
        regex: (.+)
        target_label: __metrics_path__
        action: replace
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
        action: replace
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
        action: replace
      - source_labels: [__meta_kubernetes_pod_label_app]
        target_label: job
        action: replace
      - source_labels: [__meta_kubernetes_pod_annotation_version]
        target_label: version
        action: replace
      - source_labels: [job, __meta_kubernetes_pod_container_port_name]
        regex: (.+);m-(.+)
        target_label: job
        replacement: $1-$2
        action: replace
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: monitor
  name: monitor-config
  namespace: default
